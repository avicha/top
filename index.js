// Generated by CoffeeScript 1.4.0
(function() {
  var TOP, crypto, dateutil, http, _;

  http = require('yi-http');

  _ = require('underscore');

  dateutil = require('date-utils');

  crypto = require('crypto');

  TOP = (function() {

    function TOP(config) {
      if (config) {
        this.init(config);
      }
      this;

    }

    TOP.prototype.init = function(config) {
      var self;
      self = this;
      if (config && config.appkey && config.secret) {
        self._appkey = config.appkey;
        self._secret = config.secret;
        if (config.session) {
          self._session = config.session;
        }
        self._init = true;
      } else {
        throw new Exception("please input the appkey and the secret");
      }
      return this;
    };

    TOP.prototype.api = function(config, requestType, callback) {
      var key, keys, md5, params, self, sign, str, _i, _len;
      self = this;
      if (!self._init) {
        throw new Exception("please init the appkey and the secret");
      }
      if (!callback && _.isFunction(requestType)) {
        callback = requestType;
        requestType = 'get';
      }
      params = {
        method: config.method,
        timestamp: new Date().toFormat('YYYY-MM-DD HH24:MI:SS'),
        format: 'json',
        app_key: self._appkey,
        v: '2.0',
        sign_method: 'md5'
      };
      if (self._session) {
        params.session = self._session;
      }
      _.extend(params, config);
      str = self._secret;
      keys = _.keys(params).sort();
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        key = keys[_i];
        str += key + params[key];
      }
      str += self._secret;
      md5 = crypto.createHash('md5');
      md5.update(str, 'utf8');
      sign = md5.digest('hex').toUpperCase();
      _.extend(params, {
        sign: sign
      });
      return http[requestType]({
        host: 'http://gw.api.taobao.com',
        path: '/router/rest',
        data: params,
        format: 'json',
        retry: 5
      }, function(err, res) {
        if (err || res.error_response) {
          return callback(err || res.error_response.sub_msg || res.error_response.msg, res);
        } else {
          return callback(err, res);
        }
      });
    };

    TOP.prototype.widget = function(config, requestType, callback) {
      var hmac, params, s, self, sign;
      self = this;
      if (!self._init) {
        throw new Exception("please init the appkey and the secret");
      }
      if (!callback && _.isFunction(requestType)) {
        callback = requestType;
        requestType = 'get';
      }
      params = {
        app_key: self._appkey,
        timestamp: Date.now()
      };
      if (self._session) {
        params.session = self._session;
      }
      _.extend(params, config);
      s = self._secret + 'app_key' + self._appkey + 'timestamp' + params.timestamp + self._secret;
      hmac = crypto.createHmac('md5', self._secret);
      hmac.update(s, 'utf8');
      sign = hmac.digest('hex').toUpperCase();
      _.extend(params, {
        sign: sign
      });
      return http[requestType]({
        host: 'http://gw.api.taobao.com',
        path: '/widget/rest',
        data: params,
        headers: {
          Referer: 'http://www.lovejingyi.com',
          Cookie: "timestamp=" + params.timestamp + "; sign=" + params.sign
        },
        format: 'json',
        retry: 5
      }, function(err, res) {
        if (err || res.error_response) {
          return callback(err || res.error_response.sub_msg || res.error_response.msg, res);
        } else {
          return callback(err, res);
        }
      });
    };

    return TOP;

  })();

  module.exports = TOP;

}).call(this);
